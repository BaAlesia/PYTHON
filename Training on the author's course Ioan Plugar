*************** 1 *************** Первая программа. Переменные
message = 'Hello world!'
print(message)

message = 58
print(message)

*************** 2 *************** Условные операторы. Пользовательский ввод
age = int(input("Сколько тебе лет?"))
if (age >= 21):
    print("Тебе можно!")
elif (age >= 18) and (age < 21):
    print("Тебе можно только с мамой!")
else:
    print("Тебе сюда нельзя!")
   
*************** 3 *************** Функции
def hello():
    print('Привет, мир!')

hello()
hello()
hello()
hello()

x = int(input('Введите первое число:'))
y = int(input('Введите второе число:'))

def sum(a,b):
    return a + b

print(sum(x,y))

def f(a):
    return 2 * a - 2

print(f(2))

def f(a=2):
    return 2 * a - 2

print(f())

def f(a=2):
    return 2 * a - 2

print(f(4))

a = 45
b = 5
def f(a,b):
    print(a)
    print(b)

print(a)
print(b)

a = 45
b = 5
def f():
    global a
    a = a + 2
    print(a)

f()
print(a)

*************** 4 *************** Циклы (for, while)
name = "Привет, мир!"
for i in name:
    print(i)

name = "Привет, мир!"
for i in range(1,11):
    print(name)
    
i = 1
while i<=10:
    if i != 5:
        print(i)
    i=i+1
    continue

*************** 5 *************** Списки
spisok = []
numbers = [3,4,5,9,10]
print(numbers)

numbers2 = [3,5,34.1, 'name']
print(numbers2)

numbers3 = [3,5,34.1, [45,7]]
print(numbers3)
name1 = 'Кеша'
name2 = 'Смельчак'
name3 = 'Попугай'
print(name1)
print(name2)
print(name3)

names = ['Кеша', 'Смельчак', 'Попугай']
print(names[1])
print(names[-1])

for name in names:
    print(name)

names.append('Красавчик')
print(names)

names.append('Весельчак')
print(names)

names.pop()
print(names)

n = names.index('Смельчак')
print(n)

print(len(names))

numbers = [4, 6, 81, 95, 108, 56]
numbers.sort()
print(numbers)

numbers.sort(reverse=True)
print(numbers)

numbers[1] = 'B'
print(numbers)

letters = ['sun', 'rain', 'tea', 'at', 'parrot']
letters.sort()
print(letters)

symbols = [58, 51, 5444, 58.1, 74.1, 5]
symbols.sort()
print(symbols)

*************** 6 *************** Кортежи, словари
# tuple = ('first',) 
# print(type(tuple))

# print(tuple([45, 45, 147, 45]))
# print(list((45, 45, 147, 45)))

dict = {"яблоко": "красное", "банан": "желтый", "лимон": "желтый"}
# print(dict)
# for k in dict.keys():
    # print(k)
# for k in dict.values():
    # print(k)
# for k in dict.items():
    # print(k)
    
# print(dict['банан'])

# dict['банан'] = 'зеленый'

del(dict['банан'])
print(dict)

*************** 7 *************** Работа со строками
# print('Hello world!')
# print('Cat and dog')
# print('Hello')
print('Привет\nПривет\nПривет')
print('Привет\tПривет')
print("'текст в кавычках'")
print("текст \"в\" кавычках")
text = 'Привет'
text1 = 'мир!'
print(text + " " + text1)
print(text*5) 
print(text[0])
print(text[0:3])
print(text[-1])
print(text.upper())
print(text.lower())
print(text1.capitalize())
text = 'Привет мир, куда идешь?'
print(text.split(" "))
spisok = ["a", "b", "c"]
print(",".join(spisok))
print("".join(spisok))
text3 = "     kjnbugtf njhbg          "
print(text3.strip())
print(text3.lstrip())
print(text3.rstrip())
text4 = 'ololololololololololololol'
print(text4.replace('l', 'o'))

*************** 8 *************** Модули
# import math

# print(math.factorial(10))

# import math as m

# print(m.factorial(10))

from math import factorial

print(factorial(10))

import privet
privet.privet()

def privet():
    print('Привет, мир!')
    
*************** 9 *************** Файлы и исключения
# f = open('1.txt', 'w')
# f.write('Привет, файл!')
# f.close()

# f = open('1.txt', 'r')
# print(f.read())
# f.close()

with open('1.txt', 'a') as f:
    f.write('бумажный файл')
    
# Исключения
try:
    a = int(input('a: '))
    b = int(input('b: '))
    print(a/b)
except ZeroDivisionError:
    print("На ноль делить нельзя!")
    
*************** 10 *************** Классы и объекты
    class House():
    """описание дома"""
    def __init__(self, street, numder):
        self.street = street
        self.numder = numder
        self.age = 0

    def build(self):
        """строит дом"""
        print("Дом на улице " + self.street + " под номером " + str(self.numder) + " построен.")
    def age_of_house(self, year):
        """возраст дома"""
        self.age += year

House1 = House("Минская", 20)              
House2 = House("Минская", 22)

print(House1.street)              
print(House2.numder)

House1.build()
print(House1.age)

House2.age_of_house(5)
print(House2.age)

class ProspectHouse(House):
    """дома на проспекте"""
    def __init__(self, prospect, numder):
        super().__init__(self, numder)
        self.prospect = prospect

PrHouse = ProspectHouse("Машерова", 8)
print(PrHouse.prospect)

*************** 11 *************** Множества
numbers = {1, 2, 4, 67}
print(numbers)

numbers1 = set()
print(type(numbers1))

numbers2 = set([1, 1, 2, 4, 2 ])
print(numbers2)

numbers3 = {1, 2, 3, 4, 5, 6, 7}
for i in numbers3:
    print(i)
    
numbers4 = {1, 2, 3, 4, 5, 6, 7}
print(3 in numbers4)
print(58 in numbers4)

numbers5 = {1, 2, 3, 4, 5, 6, 7}
numbers5.add(58)
print(numbers5)

numbers6 = {1, 2, 3, 4, 5, 6, 7}
numbers6.discard(58)
print(numbers6)

"""numbers7 = {1, 2, 3, 4, 5, 6, 7}
numbers7.remove(58)
print(numbers7)"""

numbers8 = {1, 2, 3, 4, 5, 6, 7}
numbers8.pop()
print(numbers8)

numbers9 = {1, 2, 3, 4, 5, 6, 7}
numbers9.clear()
print(numbers9)

numbers10 = {1, 2, 3, 4, 5, 6, 7}
numbers11 = {2, 6, 54, 42, 3}
numbers12 = numbers10.union(numbers11)
print(numbers12)

numbers13 = {1, 2, 3, 4, 5, 6, 7}
numbers14 = {2, 6, 54, 42, 3}
numbers15 = numbers13 | numbers14
print(numbers15)

numbers16 = {1, 2, 3, 4, 5, 6, 7}
numbers17 = {2, 6, 54, 42, 3}
numbers18 = numbers16.intersection(numbers17)
print(numbers18)

numbers19 = {1, 2, 3, 4, 5, 6, 7}
numbers20 = {2, 6, 54, 42, 3}
numbers21 = numbers19 - numbers20
print(numbers21)

""" numbers19 = {1, 2, 3, 4, 5, 6, 7}
numbers20 = {2, 6, 54, 42, 3}
numbers21 = numbers20 - numbers19
print(numbers21)"""

numbers22 = {1, 2, 3, 4, 5, 6, 7}
numbers23 = {2, 6, 54, 42, 3}
numbers24 = numbers23.copy()
print(numbers24)
print(len(numbers24))

numbers25 = frozenset({1, 2, 3, 4, 5, 6, 7})
print(numbers25)

*************** 12 *************** Регулярные выражения. Часть 1
import re

s = "AC/DCAC/DCAC/DCAC/DCAC/DCAC/DCAC/DCAC/DCAC/DC"
''' result = re.match("AC", s)
print(result)'''

''' result = re.search("DC", s)
print(result)
print(result[0])'''

result = re.findall("DC", s)
print(result)

result = re.split("/", s)
print(result)

result = re.split("/", s, maxsplit=3)
print(result)

result = re.sub("A", "D", s)
print(result)

result = re.fullmatch("A", s)
print(result)

import re
s = '87+3235656876512     ---joifjjndcaskmnxajfiosn>7 JTNGKSRMFSR;KJB;OD'
result = re.search(r"j.i", s)
print(result)

result = re.search(r"\d", s)
print(result)

result = re.search(r"\d\d\d", s)
print(result)

result = re.search(r"\D", s)
print(result)

result = re.search(r"\s", s)
print(result)

result = re.search(r"\S", s)
print(result)

result = re.search(r"\w", s)
print(result)

result = re.search(r"\W", s)
print(result)

result = re.search(r"\BJTN", s)
print(result)

result = re.search(r"\d*", s)
print(result)

result = re.search(r"\d+", s)
print(result)

result = re.search(r"[kfjgh]", s)
print(result)
result = re.search(r"[4-8]", s)
print(result)
result = re.search(r"[4-6]", s)
print(result)

result = re.search(r"[^4-6]", s)
print(result)

result = re.search(r"[H|f]", s)
print(result)

result = re.search(r"\d{5}", s)
print(result)

result = re.search(r"\d{1,5}", s)
print(result)

result = re.search(r"\d{4,}", s)
print(result)

result = re.search(r"\d{,4}", s)
print(result)

import re
s = 'Привет, как дела? А у меня нормально.'
result = re.findall(r"[бвгджзклмнпрстфхчшщБВГДЖЗКЛМНПРСТФХЧШЩ]\w+", s)
print(result)

*************** 13 *************** Регулярные выражения. Часть 2
def rectangle_area(a, b):
    return a * b

print(rectangle_area(17, 14))

print((lambda a, b: a * b)(17, 14))


def maximum(a, b):
    if a > b:
        return a
    else:
        return b

print(maximum(25, 17))

print((lambda a, b: a if a > b else b)(25, 17))

"""Homework"""
# 1
print((lambda a: a * 4)(6)) 
print('Периметр квадрата = '+str((lambda a: 4*a)(int(input('Введите сторону квадрата: ')))))
# 2
print((lambda a, b, c: (a + b + c) / 3)(2, 3, 5))
print('Среднее арифметическое введенных трех чисел = '+str((lambda a, b, c: (a + b + c) / 3)(int(input('Введите первое число: ')),int(input('Введите второе число: ')),int(input('Введите третье число: ')))))

